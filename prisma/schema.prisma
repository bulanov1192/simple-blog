generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  name      String
  Comment   Comment[]
  Like      Like[]
  Post      Post[]
  Session   Session[]
}

model Session {
  id        String   @id @default(uuid())
  token     String   @unique
  createdAt DateTime @default(now())
  userId    String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])
}

model Post {
  id        String    @id @default(uuid())
  title     String?
  content   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  authorId  String
  Comment   Comment[]
  Like      Like[]
  media     Media[]
  author    User      @relation(fields: [authorId], references: [id])

  @@index([authorId, createdAt, title])
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  authorId  String
  postId    String
  author    User     @relation(fields: [authorId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
  Like      Like[]
  Media     Media[]

  @@index([authorId, createdAt, postId])
}

model Media {
  id        String    @id @default(uuid())
  url       String
  type      MediaType
  postId    String
  commentId String?
  comment   Comment?  @relation(fields: [commentId], references: [id])
  post      Post      @relation(fields: [postId], references: [id])
}

model Like {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  postId    String?
  commentId String?
  comment   Comment? @relation(fields: [commentId], references: [id])
  post      Post?    @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

enum MediaType {
  IMAGE
  VIDEO
}
